mutation addNewCategory(
  $name: String!, 
  $description: String
  $parentId: UUID
) @auth(level: PUBLIC) {
  category_insert(data: {
    name: $name
    description: $description
    parentId: $parentId
  })
}


mutation addNewProduct(
  $name: String!, 
  $description: String!, 
  $category: UUID!, 
  $brand: String!
) @auth(level: PUBLIC) {
  product_insert(data: {
    name: $name
    description: $description
    categoryId: $category
    brand: $brand
  })
  }

mutation addNewProductVariation(
  $productId: UUID!, 
  $attributes: Any,
  $imageUrls: [String!]!,
  $price: Float!,
  $stockQuantity: Int!
) @auth(level: PUBLIC) {
  productVariation_insert(data: {
    productId: $productId
    attributes: $attributes
    imageUrls: $imageUrls
    price: $price
    stockQuantity: $stockQuantity
  })
}

mutation addCartItem(
  $unitPrice: Float!
 $quantity: Int!
 $variationId: UUID!
) @auth(level: PUBLIC) {
  cartItem_insert(data: {
    cartId: "37247512bd66434ba5ca741a454d3cdc"
    variationId: $variationId
    price: $unitPrice
    quantity: $quantity    
  })
}

mutation createCart @auth(level: PUBLIC) {
  cart_insert(data: {
    id: "37247512bd66434ba5ca741a454d3cdc"
    
  })
}

mutation incrementCartItemQuantity($cartItemId: UUID!, $quantity: Int!) @auth(level: PUBLIC) {
  cartItem_update(
    id: $cartItemId
    data: {
    quantity_update: {
      inc: $quantity
    }
  })
}

mutation decrementCartItemQuantity($cartItemId: UUID!, $quantity: Int!) @auth(level: PUBLIC) {
  cartItem_update(
    id: $cartItemId
    data: {
    quantity_update: {
      dec: $quantity
    }
  })
}

mutation removeCartItem($id: UUID!) @auth(level: PUBLIC) {
  cartItem_delete(id: $id)
}

mutation clearCart @auth(level: PUBLIC) {
  cartItem_deleteMany(all: true, where: {cartId: {eq: "37247512bd66434ba5ca741a454d3cdc"}})
}