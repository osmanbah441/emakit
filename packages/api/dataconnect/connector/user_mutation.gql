mutation createNewUser(
    $displayName: String
    $email: String
    $phoneNumber: String
    $photoUrl: String
) @transaction @auth(level: PUBLIC, insecureReason: "Everyone can create account") {
    user_insert(data:  {
        displayName: $displayName
        email: $email
        phoneNumber: $phoneNumber
        photoUrl: $photoUrl
    })
    
    cart_insert(data:  {
        userUid_expr: "response.user_insert.uid"
    })

}


mutation applyForStore(
    $name: String!
    $phoneNumber: String!
) @auth(level: USER, insecureReason: "Users can create stores") {
    store_insert(data: {
        name: $name
        ownerUid_expr: "auth.uid"
        phoneNumber: $phoneNumber
    })
}

mutation updateDisplayName(
    $displayName: String!
) @auth(level: USER, insecureReason: "Users can update their display name") {
    user_update(
        data: {
        displayName: $displayName
    }, key: {uid_expr: "auth.uid"})
}



mutation approveStore(
    $storeId: UUID!
) @auth(level: NO_ACCESS, insecureReason: "Admins can approve stores") {
    store_update(
        data: {status: "active"},
        key: {id: $storeId}
    )
}

mutation createCartItem(
  $productVariationId: UUID!
  $cartId: UUID!
) @auth(level: USER)  {
  cartItem_insert(data: {
    cartId: $cartId
    productVariationId: $productVariationId
  })
}
